import style from "../../styles/index.module.scss";
import styles from "../../styles/Video/Video.module.scss";
import {FontAwesomeIcon} from "@fortawesome/react-fontawesome";
import {Breadcrumb} from "react-bootstrap";
import {NextPage} from "next";
import {useRouter} from "next/router";
import Head from "next/head";
import Link from "next/link";
import Script from "next/script"
import React,{useEffect} from "react";
import {useDispatch, useSelector} from "react-redux";
import {getVideo} from "../redux/video/thunks";
import {getHomeDetail} from "../redux/home/thunks";
import {IRootState} from "../store";
import {PageHeader} from "../Component/PageHeader/PageHeader";
import {VideoPlayer} from "../Component/VideoPlayer/VideoPlayer";

const Video:NextPage = () => {
  const dispatch = useDispatch();
  const router = useRouter();
  const {pid} = router.query;
  const videoDescription = useSelector((state:IRootState) => state.home.video);
  const categories = useSelector((state:IRootState) => state.header.category);
  const videoUrl = useSelector((state:IRootState) => state.video.videoUrl.stream_url);
  let imaOptions = {
		adTagUrl:process.env.VOD_PREROLL,
		adLabel:"",
		autoPlayAdBreaks:true,
	}
  const videoTypescriptOptions = {
		sources:[
			{
				src:videoUrl,
				type:"application/x-mpegURL"
			}
		]
	}
  useEffect(() => {
    if(pid && pid.length > 1){
      dispatch(getVideo(parseInt(pid[1])));
    }
  },[dispatch,pid])
  useEffect(() => {
    dispatch(getHomeDetail());
  },[dispatch])

	return(
    <div className={style.App}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/swiper_favicon.ico"/>
      </Head>
      <div className={styles.video}>
        <PageHeader/>
        <div className={styles.video_content}>
          <main className={styles.page}>
            <div className={styles.body}>
              <div className={styles.breadcrumb}>
                {pid && videoDescription.filter((video) => video.id === pid[1]).map((video) =>
                  <Breadcrumb key={video.id}>
                    <Breadcrumb.Item>
                      <Link href="/">
                        <a className={styles.breadcrumb_link}>主頁</a>
                      </Link>
                    </Breadcrumb.Item>
                    <Breadcrumb.Item>
                      <Link href={`/category/${categories.filter((category) => category.cate_id === video.cate_id).map((category) => category.name_en.toLowerCase().split(" ").join(""))}`}>
                        <a className={styles.breadcrumb_link}>{categories.filter((category) => category.cate_id === video.cate_id).map((category) => category.name_cn)}</a>
                      </Link>
                    </Breadcrumb.Item>
                    <Breadcrumb.Item>
                      <Link href={`/channel/${video.subcate_name}/${video.subcate_id}`}>
                        <a className={styles.breadcrumb_link}>{video.subcate_name}</a>
                      </Link>
                    </Breadcrumb.Item>
                    <Breadcrumb.Item active>{pid && videoDescription.filter((video) => video.id === pid[1]).map((video) => video.title)}</Breadcrumb.Item>
                  </Breadcrumb>
                )}
              </div>
              <div className={styles.video_player_description}>
                <header className={styles.video_header}>
                  {
                    pid && videoDescription.filter((video) => video.id === pid[1]).map((video) =>
                      <div className={styles.video_information} key={video.id}>
                        <div className={styles.video_title}>{video.title}</div>
                        <div className={styles.video_date}>{video.updated_at}</div>
                      </div>
                    )
                  }
                  <div className={styles.top_buttons}>
                    <button className={styles.like_button}>
                      <FontAwesomeIcon icon={["far","thumbs-up"]} height={14} width={14} className={styles.fontawesome_icon}/>
                      <div>171</div>
                    </button>
                    <button className={styles.comment_button}>
                      <FontAwesomeIcon icon={["far","comment-alt"]} height={14} width={14} className={styles.fontawesome_icon}/>
                      <div>171</div>
                    </button>
                    <button className={styles.comment_button}>
                      <FontAwesomeIcon icon={["far","share-square"]} height={14} width={14} className={styles.fontawesome_icon}/>
                      <div>分享</div>
                    </button>
                    <button className={styles.more_options_button}>
                      <div className={styles.font_awesome}>
                        <FontAwesomeIcon icon={"caret-down"} height={14} width={14} className={styles.fontawesome_icon}/>
                      </div>
                    </button>
                  </div>
                </header>
                <div className={styles.video_player}>
                  {videoUrl && <VideoPlayer options={videoTypescriptOptions}/>}
                </div>
              </div>
            </div>
          </main>
        </div>
      </div>
      <Script src="https://imasdk.googleapis.com/js/sdkloader/ima3.js"></Script>
      <Script src="https://googleads.github.io/videojs-ima/node_modules/video.js/dist/video.min.js"></Script>
      <Script src="https://googleads.github.io/videojs-ima/node_modules/videojs-contrib-ads/dist/videojs.ads.min.js"></Script>
    </div>
  )
}

export default Video;