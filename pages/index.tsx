import styles from "../styles/index.module.scss";
import style from "../styles/Home/Home.module.scss";
import {FontAwesomeIcon} from "@fortawesome/react-fontawesome";
import {Swiper,SwiperSlide} from "swiper/react";
import {Carousel} from "react-bootstrap";
import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import {NextPage} from "next";
import {useDispatch,useSelector} from "react-redux";
import React,{useEffect,useRef,useState} from "react";
import {getHomeDetail} from "./redux/home/thunks";
import {getSubCategory} from "./redux/header/thunks";
import {IRootState} from "./store";
import {HorizontalScrollHomeCategoryBlock} from "./Component/HorizontalScrollHomeCategoryBlock/HorizontalScrollHomeCategoryBlock";
import {HomeCategoryBlock} from "./Component/HomeCategoryBlock/HomeCategoryBlock";
import {VideoBlock} from "./Component/VideoBlock/VideoBlock";
import {ComponentHeader} from "./Component/ComponentHeader/ComponentHeader";
import {Footer} from "./Component/Footer/Footer";
import {Header} from "./Component/Header/Header";

const Home:NextPage = () => {
  const dispatch = useDispatch();
	const videoDetail = useSelector((state:IRootState) => state.home.video);
	const categoryName = useSelector((state:IRootState) => state.header.category);
  const freeContentBlock = useRef<any>(null);
  const [freeContentBlockWidth,setFreeContentBlockWidth] = useState(0);
  const latestContentBlock = useRef<any>(null);
  const [latestContentBlockWidth,setLatestContentBlockWidth] = useState(0);
  const [scrollHeight,setScrollHeight] = useState(0);
  const [windowDimensions,setWindowDimensions] = useState({width:0,height:0});
	useEffect(() => {
		dispatch(getHomeDetail());
	},[dispatch])
  useEffect(() => {
    function resizeFreeContentBlockWidth(){
      setFreeContentBlockWidth(freeContentBlock.current.offsetWidth);
    }
    window.addEventListener("resize",resizeFreeContentBlockWidth);
    return () => window.removeEventListener("resize",resizeFreeContentBlockWidth);
	},[])
  useEffect(() => {
    function resizeLatestContentBlockWidth(){
      setLatestContentBlockWidth(latestContentBlock.current.offsetWidth);
    }
    window.addEventListener("resize",resizeLatestContentBlockWidth);
    return () => window.removeEventListener("resize",resizeLatestContentBlockWidth);
	},[])
  useEffect(() => {
		function updateScrollHeight(){
			setScrollHeight(window.pageYOffset);
		}
		window.addEventListener("scroll",updateScrollHeight);
		return () => window.removeEventListener("scroll",updateScrollHeight);
	},[])
  useEffect(() => {
		function handleResize(){
			setWindowDimensions({width:window.innerWidth,height:window.innerHeight});
		}
		window.addEventListener("resize",handleResize);
		return () => window.removeEventListener("resize",handleResize);
	},[])

	return(
		<div className={`${style.home} ${styles.App}`}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="./swiper_favicon.ico"/>
      </Head>
			<Header/>
			<div className={style.advertisement}></div>
      {scrollHeight > 5 &&
        <button className={style.upwards_button} onClick={() => {
          window.scrollTo({
            top: 0,
            behavior: "smooth"
          })
        }}>
          <FontAwesomeIcon icon="chevron-up" height={20} width={20}/>
        </button>
      }
      <main className={style.page}>
				<div className={style.body}>
					<div className={style.main_content}>
						<Carousel className={style.main_carousel}>
							{
								videoDetail.filter((video,index) => index < 3)
								.map((video) =>
									<Carousel.Item key={video.id}>
                    <Link href={`/video/${video.subcate_name.split("・").join("")}/${video.id}/${video.title}`}>
                      <a>
                        <div className="image">
                          <Image className="d-block w-100" src={video.pic_url} alt="slide" layout="fill"/>
                        </div>
                        <Carousel.Caption>
                          <div className="carousel_category">
                            <Link href={`/category/${categoryName.filter((category) => category.cate_id === video.cate_id).map((category) => category.name_en)}`}>
                              <a>{categoryName.filter((category) => category.cate_id === video.cate_id).map((category) => category.name_cn)}</a>
                            </Link>
                          </div>
                          <h6>{video.title}</h6>
                        </Carousel.Caption>
                      </a>
                    </Link>
									</Carousel.Item>
								)
							}
						</Carousel>
						<div ref={freeContentBlock} className={style.free_content}>
							<section className={style.free_content_section}>
								<ComponentHeader header="免費任睇"/>
								<div className={style.video_list}>
									{
										videoDetail.filter((video,index) => index < 3)
										.map((video) => {
                      // return同括號一定要同一衘
                      return(
                        freeContentBlockWidth > 590 ?
                        <VideoBlock key={video.id} video={video} blockPerRow={3} titleHeight={40}/> :
                        <VideoBlock key={video.id} video={video} blockPerRow={2} titleHeight={40}/>
                      )
                    })
									}
									{
										videoDetail.filter((video,index) => index > 8 && index < 12)
										.map((video) => {
                      return(
                        freeContentBlockWidth > 590 ?
                        <VideoBlock key={video.id} video={video} blockPerRow={3} titleHeight={40}/> :
                        <VideoBlock key={video.id} video={video} blockPerRow={2} titleHeight={40}/>
                      )
                    })
									}
								</div>
							</section>
						</div>
						<div className={style.trending_content}>
							<section className={style.trending_content_section}>
								<ComponentHeader header="熱門影片"/>
								<Swiper
									spaceBetween={5}
									slidesPerView={2}
									slidesPerGroup={2}
									navigation
									pagination={{clickable:true}}
								>
									{
										videoDetail.filter((video,index) => index < 3)
										.map((video) => {
                      return(
                        <SwiperSlide key={video.id}>
                          <VideoBlock video={video} blockPerRow={1}/>
                        </SwiperSlide>
										  )
                    })
									}
                  {
										videoDetail.filter((video,index) => index > 8 && index < 10)
										.map((video) => {
                      return(
                        <SwiperSlide key={video.id}>
                          <VideoBlock video={video} blockPerRow={1}/>
                        </SwiperSlide>
										  )
                    })
									}
								</Swiper>
							</section>
						</div>
						<div className={style.advice_content}>
							<section className={style.advice_content_section}>
								<ComponentHeader header="推薦影片"/>
								<Swiper
									spaceBetween={5}
									slidesPerView={2}
									slidesPerGroup={2}
									navigation
									pagination={{clickable:true}}
								>
									{
										videoDetail.filter((video,index) => index < 3)
										.map((video) =>
											<SwiperSlide key={video.id}>
												<VideoBlock video={video} blockPerRow={1}/>
											</SwiperSlide>
										)
									}
                  {
										videoDetail.filter((video,index) => index > 8 && index < 10)
										.map((video) => {
                      return(
                        <SwiperSlide key={video.id}>
                          <VideoBlock video={video} blockPerRow={1}/>
                        </SwiperSlide>
										  )
                    })
									}
								</Swiper>
							</section>
						</div>
            <div ref={latestContentBlock} className={style.latest_content}>
							<section className={style.latest_content_section}>
								<ComponentHeader header="最新影片"/>
								<div className={style.video_list}>
									{
										videoDetail.filter((video,index) => index < 3)
										.map((video) => {
                      return(
                        latestContentBlockWidth > 590 ?
                        <VideoBlock key={video.id} video={video} blockPerRow={3} titleHeight={40}/> :
                        <VideoBlock key={video.id} video={video} blockPerRow={2} titleHeight={40}/>
                      )
                    })
									}
									{
										videoDetail.filter((video,index) => index > 8 && index < 12)
										.map((video) => {
                      return(
                        latestContentBlockWidth > 590 ?
                        <VideoBlock key={video.id} video={video} blockPerRow={3} titleHeight={40}/> :
                        <VideoBlock key={video.id} video={video} blockPerRow={2} titleHeight={40}/>
                      )
                    })
									}
								</div>
							</section>
						</div>
					</div>
					<aside className={style.sidebar}>
						<div className={style.latest_content}>
							<section className={style.latest_content_section}>
								<ComponentHeader header="最新影片"/>
                <div className={style.video_list_scroll}>
                  <div className={style.video_list}>
                    {
                      videoDetail.filter((video,index) => index < 3)
                      .map((video) =>
                        <VideoBlock key={video.id} video={video} blockPerRow={1}/>
                      )
                    }
                    {
                      videoDetail.filter((video,index) => index > 8 && index < 12)
                      .map((video) =>
                        <VideoBlock key={video.id} video={video} blockPerRow={1}/>
                      )
                    }
                  </div>
                </div>
							</section>
						</div>
            <div className={style.trending_topic}>
              <section className={style.trending_topic_section}>
                <header>
                  <div>熱門話題</div>
                  <div className={style.border_line}></div>
                </header>
                <ol className={style.trending_tag_list}>
                  <li className={style.trending_tag_list_item}>
                    <span className={style.tag}>1. 李雲迪</span>
                  </li>
                  <li className={style.trending_tag_list_item}>
                    <span className={style.tag}>1. 李雲迪</span>
                  </li>
                  <li className={style.trending_tag_list_item}>
                    <span className={style.tag}>1. 李雲迪</span>
                  </li>
                  <li className={style.trending_tag_list_item}>
                    <span className={style.tag}>1. 李雲迪</span>
                  </li>
                  <li className={style.trending_tag_list_item}>
                    <span className={style.tag}>1. 李雲迪</span>
                  </li>
                  <li className={style.trending_tag_list_item}>
                    <span className={style.tag}>1. 李雲迪</span>
                  </li>
                </ol>
              </section>
            </div>
					</aside>
				</div>
			</main>
      <div className={style.member_extended_content}>
        <section className={style.member_extended_content_section}>
          <ComponentHeader header="會員專區" color="#fff" padding={0} borderColor="#4d535a"/>
          <div className={style.video_list}>
            {
              videoDetail.filter((video,index) => index < 3)
              .map((video) => {
                return(
                  <Link href={`/video/${video.subcate_name.split("・").join("")}/${video.id}/${video.title}`} key={video.id}>
                    <a className={style.video_block}>
                      <div className={style.image}>
                        <Image src={video.pic_url} alt="video-detail" className="d-block w-100" layout="fill"/>
                      </div>
                      <div className={style.video_description}>
                        <header className={style.video_title} style={{minHeight:windowDimensions.width < 600 ? 36 : 42,fontSize:windowDimensions.width < 600 ? 12 : 14}}>{video.title}</header>
                        <div className={style.display_date}>{video.display_date}</div>
                      </div>
                    </a>
                  </Link>
                )
              })
            }
            {
              videoDetail.filter((video,index) => index > 8 && index < 10)
              .map((video) => {
                return(
                  <Link href={`/video/${video.subcate_name.split("・").join("")}/${video.id}/${video.title}`} key={video.id}>
                    <a className={style.video_block}>
                      <div className={style.image}>
                        <Image src={video.pic_url} alt="video-detail" className="d-block w-100" layout="fill"/>
                      </div>
                      <div className={style.video_description}>
                        <header className={style.video_title} style={{minHeight:windowDimensions.width < 600 ? 36 : 42,fontSize:windowDimensions.width < 600 ? 12 : 14}}>{video.title}</header>
                        <div className={style.display_date}>{video.display_date}</div>
                      </div>
                    </a>
                  </Link>
                )
              })
            }
          </div>
        </section>
      </div>
      <div className={style.large_category_blocks}>
        <section className={style.large_category_blocks_section}>
          {
            categoryName.map((category) => (
              <HomeCategoryBlock key={category.cate_id} category={category}/>
            ))
          }
        </section>
      </div>
      <div className={style.horizontal_scroll_category_blocks}>
        <section className={`${style.horizontal_scroll_category_blocks_section} long_swiper`}>
          <Swiper
            spaceBetween={15}
            slidesPerView="auto"
            navigation
            mousewheel={{forceToAxis:true}}
          >
            {categoryName.map(category =>
              <SwiperSlide className={style.category_block} key={category.cate_id}>
                <HorizontalScrollHomeCategoryBlock category={category}/>
              </SwiperSlide>
            )}
          </Swiper>
        </section>
      </div>
      <Footer/>
		</div>
	)
}

export default Home;